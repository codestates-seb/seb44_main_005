spring:
  redis:
    host: ${REDIS_HOST}
    port: 6379
  cache:
    type: redis
    redis:
      time-to-live: 600 # 데이터 유지 시간(sec)
      cache-null-values: true # null 캐싱 여부
  h2:
    console:
      enabled: true
      path: /h2
      settings:
        web-allow-others: true
#  sql:
#    init:
#      data-locations: classpath*:db/h2/data.sql
#      encoding: UTF-8
  jpa:
    database: mysql   # mysql 설정
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        connection:
          characterEncoding: UTF-8
          useUniCode: true
        format_sql: true  # SQL pretty print
        jdbc:
          time_zone: Asia/Seoul   # 서버 시간 서울로 변경

  datasource:
      #url: jdbc:h2:mem:test
    driver-class-name: com.mysql.cj.jdbc.Driver   # RDS mysql 설정
    initialization-mode: always
  security:
    oauth2:
      client:
        registration:
          google:
            # 백엔드 도메인
            redirect-uri: http://ec2-52-78-205-102.ap-northeast-2.compute.amazonaws.com:8080/login/oauth2/code/google
            client-id: ${G_CLIENT_ID}
            client-secret: ${G_CLIENT_SECRET}
            scope:
              - profile
              - email
  servlet:
    multipart:    # 파일 업로드 관련 설정
      enabled: true
      file-size-threshold: 2KB
      max-file-size: 100MB
      max-request-size: 100MB
      resolve-lazily: false

logging:
  level:
    org:
      springframework:
        orm: DEBUG
    com:
      amazons:
        util:
          EC2MetadataUtils: ERROR

server: # 모든 response 에 대해 지정된 인코딩 적용(한글 깨짐 방지)
  servlet:
    encoding:
      force-response: true

jwt: # JWT 관련 정보
  key: ${JWT_SECRET_KEY}  # 시스템 환경 변수에서 로드
  access-token-expiration-minutes: 100
  refresh-token-expiration-minutes: 200

cloud: # AWS S3 버킷 설정
  aws:
    s3:
      bucket: action-project
    region:
      static: ap-northeast-2
      auto: false
    stack:
      auto: false
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}

kakao: # 카카오 지도 관련
  url: https://dapi.kakao.com/v2/local/search/address.json
  access-key: ${KAKAO_ACCESS_KEY}

payment: # 토스 페이먼츠 관련
  toss:
    test-client-key: ${TOSS_CLIENT_KEY}
    test-secret-key: ${TOSS_SECRET_KEY}
    url: "https://api.tosspayments.com/v1/payments/"